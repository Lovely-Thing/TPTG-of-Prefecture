import PageContainer from '@/components/PageContainer'
import PrefectureItem from '@/components/PrefectureItem'
import TitleComponent from '@/components/TitleComponent'
import { usePrefectureContext } from '@/context/PrefectureContext'
import * as Highcharts from 'highcharts'
import HighchartsReact from 'highcharts-react-official'
import type { GetServerSideProps } from 'next'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import styled from 'styled-components'
import styles from '../styles/Home.module.css'

interface PrefectureProps {
  prefectures: Prefecture[]
}

interface Prefecture {
  prefCode: number
  prefName: string
}

interface Serie {
  name: string
  data: number[]
}

export default function Home({ prefectures }: PrefectureProps) {
  const { prefectureList, originalPrefectureList } = usePrefectureContext()
  const [chartOptions, setChartOptions] = useState({})
  const [xAxisLabel, setXAxisLabel] = useState<number[]>([])
  const [seriesList, setSeriesList] = useState<Serie[]>([])

  useEffect(() => {
    const serieArray: Serie[] = []
    const labelArray: number[] = []
    originalPrefectureList.map((item) => {
      const dataArray: number[] = []
      if (prefectureList.indexOf(item.id) !== -1) {
        item.data.map((subItem) => {
          dataArray.push(subItem.value)
          labelArray.push(subItem.year)
        })
        serieArray.push({
          name: item.name,
          data: dataArray,
        })
      }
    })
    setSeriesList(serieArray)
    setXAxisLabel(labelArray)
  }, [prefectureList, originalPrefectureList])

  useEffect(() => {
    // set chat options
    setChartOptions({
      chart: {
        marginTop: 60,
        marginRight: 60,
      },
      title: {
        text: '都道府県一覧および総人口情報',
      },
      xAxis: {
        categories: xAxisLabel,
        title: {
          text: '年度',
          style: { color: '#000', fontSize: '12px', fontWeight: 'bold' },
          align: 'high',
          x: 40,
          y: -20,
        },
      },
      yAxis: {
        title: {
          text: '人口数',
          style: { color: '#000', fontSize: '12px', fontWeight: 'bold' },
          align: 'high',
          rotation: 0,
          offset: 0,
          y: -25,
          x: -5,
        },
      },
      legend: {
        enabled: false,
      },
      series: seriesList,
    })
  }, [seriesList, xAxisLabel])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <PageContainer>
          <Container>
            <TitleComponent label="Title" />
            <SectionTitle>都道府県</SectionTitle>
            <PrefectureContainer>
              {prefectures.map((item, k) => {
                return (
                  <PrefectureItem
                    label={item.prefName}
                    id={item.prefName + item.prefCode}
                    code={item.prefCode}
                    key={k}
                  />
                )
              })}
            </PrefectureContainer>
            <ChartContainer>
              <HighchartsReact highcharts={Highcharts} options={chartOptions} />
            </ChartContainer>
          </Container>
        </PageContainer>
      </main>
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async () => {
  const url = 'https://opendata.resas-portal.go.jp/api/v1/prefectures'
  const apiKey = process.env.X_API_KEY || ''

  const res = await fetch(url, { headers: { 'X-API-KEY': apiKey } })
  const prefecturesJson = await res.json()
  const prefectures = prefecturesJson.result

  return {
    props: { prefectures },
  }
}

const Container = styled.div`
  border: solid 1px #000;
`

const PrefectureContainer = styled.div`
  display: flex;
  flex-wrap: wrap;
`
const SectionTitle = styled.label`
  margin: 10px 12px;
  margin-top: 30px;
  font-weight: 600;
  display: block;
  @media (max-width: 600px) {
    font-size: 15px;
    margin-top: 20px;
  }
`
const ChartContainer = styled.div`
  .highcharts-title {
    display: none;
  }
`
